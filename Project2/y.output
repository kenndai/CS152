State 42 conflicts: 1 shift/reduce
State 53 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: Function-Loop

    2 Function-Loop: Function Function-Loop
    3              | %empty

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Declaration-Loop END_PARAMS BEGIN_LOCALS Declaration-Loop END_LOCALS BEGIN_BODY Statement-Loop END_BODY

    5 Declaration-Loop: Declaration SEMICOLON Declaration-Loop
    6                 | %empty

    7 Ident-Loop: IDENT
    8           | IDENT COMMA Ident-Loop

    9 Declaration: Ident-Loop COLON INTEGER
   10            | Ident-Loop COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

   11 Statement-Loop: Statement SEMICOLON
   12               | Statement SEMICOLON Statement-Loop

   13 Statement: Var ASSIGN Expression
   14          | IF Bool-Expr THEN Statement-Loop ENDIF
   15          | IF Bool-Expr THEN Statement-Loop ELSE Statement-Loop ENDIF
   16          | WHILE Bool-Expr BEGINLOOP Statement-Loop ENDLOOP
   17          | DO BEGINLOOP Statement-Loop ENDLOOP WHILE Bool-Expr
   18          | READ Var-Loop
   19          | WRITE Var-Loop
   20          | CONTINUE
   21          | RETURN Expression

   22 Bool-Expr: Relation-And-Expr
   23          | Relation-And-Expr OR Bool-Expr

   24 Relation-And-Expr: Relation-Expr
   25                  | Relation-Expr AND Relation-And-Expr

   26 Relation-Expr: NOT Expression Comp Expression
   27              | NOT TRUE
   28              | NOT FALSE
   29              | NOT L_PAREN Bool-Expr R_PAREN
   30              | Expression Comp Expression
   31              | TRUE
   32              | FALSE
   33              | L_PAREN Bool-Expr R_PAREN

   34 Comp: EQ
   35     | NEQ
   36     | LT
   37     | GT
   38     | LTE
   39     | GTE

   40 Expression-Loop: Expression
   41                | Expression COMMA Expression Expression-Loop
   42                | %empty

   43 Expression: Multiplicative-Expr
   44           | Multiplicative-Expr ADD Expression
   45           | Multiplicative-Expr SUB Expression

   46 Multiplicative-Expr: Term
   47                    | Term MULT Multiplicative-Expr
   48                    | Term DIV Multiplicative-Expr
   49                    | Term MOD Multiplicative-Expr

   50 Term: SUB Var
   51     | SUB NUMBER
   52     | SUB L_PAREN Expression R_PAREN
   53     | Var
   54     | NUMBER
   55     | L_PAREN Expression R_PAREN
   56     | IDENT L_PAREN Expression-Loop R_PAREN

   57 Var-Loop: Var
   58         | Var COMMA Var-Loop

   59 Var: IDENT
   60    | IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENT (258) 4 7 8 56 59 60
NUMBER (259) 10 51 54
FUNCTION (260) 4
BEGIN_PARAMS (261) 4
END_PARAMS (262) 4
BEGIN_LOCALS (263) 4
END_LOCALS (264) 4
BEGIN_BODY (265) 4
END_BODY (266) 4
INTEGER (267) 9 10
ARRAY (268) 10
OF (269) 10
IF (270) 14 15
THEN (271) 14 15
ENDIF (272) 14 15
ELSE (273) 15
WHILE (274) 16 17
DO (275) 17
BEGINLOOP (276) 16 17
ENDLOOP (277) 16 17
CONTINUE (278) 20
READ (279) 18
WRITE (280) 19
TRUE (281) 27 31
FALSE (282) 28 32
RETURN (283) 21
SEMICOLON (284) 4 5 11 12
COLON (285) 9 10
COMMA (286) 8 41 58
L_PAREN (287) 29 33 52 55 56
R_PAREN (288) 29 33 52 55 56
L_SQUARE_BRACKET (289) 10 60
R_SQUARE_BRACKET (290) 10 60
ASSIGN (291) 13
OR (292) 23
AND (293) 25
NOT (294) 26 27 28 29
LT (295) 36
LTE (296) 38
GT (297) 37
GTE (298) 39
EQ (299) 34
NEQ (300) 35
ADD (301) 44
SUB (302) 45 50 51 52
MULT (303) 47
DIV (304) 48
MOD (305) 49


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
Program (52)
    on left: 1, on right: 0
Function-Loop (53)
    on left: 2 3, on right: 1 2
Function (54)
    on left: 4, on right: 2
Declaration-Loop (55)
    on left: 5 6, on right: 4 5
Ident-Loop (56)
    on left: 7 8, on right: 8 9 10
Declaration (57)
    on left: 9 10, on right: 5
Statement-Loop (58)
    on left: 11 12, on right: 4 12 14 15 16 17
Statement (59)
    on left: 13 14 15 16 17 18 19 20 21, on right: 11 12
Bool-Expr (60)
    on left: 22 23, on right: 14 15 16 17 23 29 33
Relation-And-Expr (61)
    on left: 24 25, on right: 22 23 25
Relation-Expr (62)
    on left: 26 27 28 29 30 31 32 33, on right: 24 25
Comp (63)
    on left: 34 35 36 37 38 39, on right: 26 30
Expression-Loop (64)
    on left: 40 41 42, on right: 41 56
Expression (65)
    on left: 43 44 45, on right: 13 21 26 30 40 41 44 45 52 55 60
Multiplicative-Expr (66)
    on left: 46 47 48 49, on right: 43 44 45 47 48 49
Term (67)
    on left: 50 51 52 53 54 55 56, on right: 46 47 48 49
Var-Loop (68)
    on left: 57 58, on right: 18 19 58
Var (69)
    on left: 59 60, on right: 13 50 53 57 58


State 0

    0 $accept: . Program $end

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (Function-Loop)

    Program        go to state 2
    Function-Loop  go to state 3
    Function       go to state 4


State 1

    4 Function: FUNCTION . IDENT SEMICOLON BEGIN_PARAMS Declaration-Loop END_PARAMS BEGIN_LOCALS Declaration-Loop END_LOCALS BEGIN_BODY Statement-Loop END_BODY

    IDENT  shift, and go to state 5


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 6


State 3

    1 Program: Function-Loop .

    $default  reduce using rule 1 (Program)


State 4

    2 Function-Loop: Function . Function-Loop

    FUNCTION  shift, and go to state 1

    $default  reduce using rule 3 (Function-Loop)

    Function-Loop  go to state 7
    Function       go to state 4


State 5

    4 Function: FUNCTION IDENT . SEMICOLON BEGIN_PARAMS Declaration-Loop END_PARAMS BEGIN_LOCALS Declaration-Loop END_LOCALS BEGIN_BODY Statement-Loop END_BODY

    SEMICOLON  shift, and go to state 8


State 6

    0 $accept: Program $end .

    $default  accept


State 7

    2 Function-Loop: Function Function-Loop .

    $default  reduce using rule 2 (Function-Loop)


State 8

    4 Function: FUNCTION IDENT SEMICOLON . BEGIN_PARAMS Declaration-Loop END_PARAMS BEGIN_LOCALS Declaration-Loop END_LOCALS BEGIN_BODY Statement-Loop END_BODY

    BEGIN_PARAMS  shift, and go to state 9


State 9

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS . Declaration-Loop END_PARAMS BEGIN_LOCALS Declaration-Loop END_LOCALS BEGIN_BODY Statement-Loop END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 6 (Declaration-Loop)

    Declaration-Loop  go to state 11
    Ident-Loop        go to state 12
    Declaration       go to state 13


State 10

    7 Ident-Loop: IDENT .
    8           | IDENT . COMMA Ident-Loop

    COMMA  shift, and go to state 14

    $default  reduce using rule 7 (Ident-Loop)


State 11

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Declaration-Loop . END_PARAMS BEGIN_LOCALS Declaration-Loop END_LOCALS BEGIN_BODY Statement-Loop END_BODY

    END_PARAMS  shift, and go to state 15


State 12

    9 Declaration: Ident-Loop . COLON INTEGER
   10            | Ident-Loop . COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    COLON  shift, and go to state 16


State 13

    5 Declaration-Loop: Declaration . SEMICOLON Declaration-Loop

    SEMICOLON  shift, and go to state 17


State 14

    8 Ident-Loop: IDENT COMMA . Ident-Loop

    IDENT  shift, and go to state 10

    Ident-Loop  go to state 18


State 15

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Declaration-Loop END_PARAMS . BEGIN_LOCALS Declaration-Loop END_LOCALS BEGIN_BODY Statement-Loop END_BODY

    BEGIN_LOCALS  shift, and go to state 19


State 16

    9 Declaration: Ident-Loop COLON . INTEGER
   10            | Ident-Loop COLON . ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    INTEGER  shift, and go to state 20
    ARRAY    shift, and go to state 21


State 17

    5 Declaration-Loop: Declaration SEMICOLON . Declaration-Loop

    IDENT  shift, and go to state 10

    $default  reduce using rule 6 (Declaration-Loop)

    Declaration-Loop  go to state 22
    Ident-Loop        go to state 12
    Declaration       go to state 13


State 18

    8 Ident-Loop: IDENT COMMA Ident-Loop .

    $default  reduce using rule 8 (Ident-Loop)


State 19

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Declaration-Loop END_PARAMS BEGIN_LOCALS . Declaration-Loop END_LOCALS BEGIN_BODY Statement-Loop END_BODY

    IDENT  shift, and go to state 10

    $default  reduce using rule 6 (Declaration-Loop)

    Declaration-Loop  go to state 23
    Ident-Loop        go to state 12
    Declaration       go to state 13


State 20

    9 Declaration: Ident-Loop COLON INTEGER .

    $default  reduce using rule 9 (Declaration)


State 21

   10 Declaration: Ident-Loop COLON ARRAY . L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER

    L_SQUARE_BRACKET  shift, and go to state 24


State 22

    5 Declaration-Loop: Declaration SEMICOLON Declaration-Loop .

    $default  reduce using rule 5 (Declaration-Loop)


State 23

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Declaration-Loop END_PARAMS BEGIN_LOCALS Declaration-Loop . END_LOCALS BEGIN_BODY Statement-Loop END_BODY

    END_LOCALS  shift, and go to state 25


State 24

   10 Declaration: Ident-Loop COLON ARRAY L_SQUARE_BRACKET . NUMBER R_SQUARE_BRACKET OF INTEGER

    NUMBER  shift, and go to state 26


State 25

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Declaration-Loop END_PARAMS BEGIN_LOCALS Declaration-Loop END_LOCALS . BEGIN_BODY Statement-Loop END_BODY

    BEGIN_BODY  shift, and go to state 27


State 26

   10 Declaration: Ident-Loop COLON ARRAY L_SQUARE_BRACKET NUMBER . R_SQUARE_BRACKET OF INTEGER

    R_SQUARE_BRACKET  shift, and go to state 28


State 27

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Declaration-Loop END_PARAMS BEGIN_LOCALS Declaration-Loop END_LOCALS BEGIN_BODY . Statement-Loop END_BODY

    IDENT     shift, and go to state 29
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36

    Statement-Loop  go to state 37
    Statement       go to state 38
    Var             go to state 39


State 28

   10 Declaration: Ident-Loop COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET . OF INTEGER

    OF  shift, and go to state 40


State 29

   59 Var: IDENT .
   60    | IDENT . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    L_SQUARE_BRACKET  shift, and go to state 41

    $default  reduce using rule 59 (Var)


State 30

   14 Statement: IF . Bool-Expr THEN Statement-Loop ENDIF
   15          | IF . Bool-Expr THEN Statement-Loop ELSE Statement-Loop ENDIF

    IDENT    shift, and go to state 42
    NUMBER   shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    L_PAREN  shift, and go to state 46
    NOT      shift, and go to state 47
    SUB      shift, and go to state 48

    Bool-Expr            go to state 49
    Relation-And-Expr    go to state 50
    Relation-Expr        go to state 51
    Expression           go to state 52
    Multiplicative-Expr  go to state 53
    Term                 go to state 54
    Var                  go to state 55


State 31

   16 Statement: WHILE . Bool-Expr BEGINLOOP Statement-Loop ENDLOOP

    IDENT    shift, and go to state 42
    NUMBER   shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    L_PAREN  shift, and go to state 46
    NOT      shift, and go to state 47
    SUB      shift, and go to state 48

    Bool-Expr            go to state 56
    Relation-And-Expr    go to state 50
    Relation-Expr        go to state 51
    Expression           go to state 52
    Multiplicative-Expr  go to state 53
    Term                 go to state 54
    Var                  go to state 55


State 32

   17 Statement: DO . BEGINLOOP Statement-Loop ENDLOOP WHILE Bool-Expr

    BEGINLOOP  shift, and go to state 57


State 33

   20 Statement: CONTINUE .

    $default  reduce using rule 20 (Statement)


State 34

   18 Statement: READ . Var-Loop

    IDENT  shift, and go to state 29

    Var-Loop  go to state 58
    Var       go to state 59


State 35

   19 Statement: WRITE . Var-Loop

    IDENT  shift, and go to state 29

    Var-Loop  go to state 60
    Var       go to state 59


State 36

   21 Statement: RETURN . Expression

    IDENT    shift, and go to state 42
    NUMBER   shift, and go to state 43
    L_PAREN  shift, and go to state 61
    SUB      shift, and go to state 48

    Expression           go to state 62
    Multiplicative-Expr  go to state 53
    Term                 go to state 54
    Var                  go to state 55


State 37

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Declaration-Loop END_PARAMS BEGIN_LOCALS Declaration-Loop END_LOCALS BEGIN_BODY Statement-Loop . END_BODY

    END_BODY  shift, and go to state 63


State 38

   11 Statement-Loop: Statement . SEMICOLON
   12               | Statement . SEMICOLON Statement-Loop

    SEMICOLON  shift, and go to state 64


State 39

   13 Statement: Var . ASSIGN Expression

    ASSIGN  shift, and go to state 65


State 40

   10 Declaration: Ident-Loop COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF . INTEGER

    INTEGER  shift, and go to state 66


State 41

   60 Var: IDENT L_SQUARE_BRACKET . Expression R_SQUARE_BRACKET

    IDENT    shift, and go to state 42
    NUMBER   shift, and go to state 43
    L_PAREN  shift, and go to state 61
    SUB      shift, and go to state 48

    Expression           go to state 67
    Multiplicative-Expr  go to state 53
    Term                 go to state 54
    Var                  go to state 55


State 42

   56 Term: IDENT . L_PAREN Expression-Loop R_PAREN
   59 Var: IDENT .
   60    | IDENT . L_SQUARE_BRACKET Expression R_SQUARE_BRACKET

    L_PAREN           shift, and go to state 68
    L_SQUARE_BRACKET  shift, and go to state 41

    L_PAREN   [reduce using rule 59 (Var)]
    $default  reduce using rule 59 (Var)


State 43

   54 Term: NUMBER .

    $default  reduce using rule 54 (Term)


State 44

   31 Relation-Expr: TRUE .

    $default  reduce using rule 31 (Relation-Expr)


State 45

   32 Relation-Expr: FALSE .

    $default  reduce using rule 32 (Relation-Expr)


State 46

   33 Relation-Expr: L_PAREN . Bool-Expr R_PAREN
   55 Term: L_PAREN . Expression R_PAREN

    IDENT    shift, and go to state 42
    NUMBER   shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    L_PAREN  shift, and go to state 46
    NOT      shift, and go to state 47
    SUB      shift, and go to state 48

    Bool-Expr            go to state 69
    Relation-And-Expr    go to state 50
    Relation-Expr        go to state 51
    Expression           go to state 70
    Multiplicative-Expr  go to state 53
    Term                 go to state 54
    Var                  go to state 55


State 47

   26 Relation-Expr: NOT . Expression Comp Expression
   27              | NOT . TRUE
   28              | NOT . FALSE
   29              | NOT . L_PAREN Bool-Expr R_PAREN

    IDENT    shift, and go to state 42
    NUMBER   shift, and go to state 43
    TRUE     shift, and go to state 71
    FALSE    shift, and go to state 72
    L_PAREN  shift, and go to state 73
    SUB      shift, and go to state 48

    Expression           go to state 74
    Multiplicative-Expr  go to state 53
    Term                 go to state 54
    Var                  go to state 55


State 48

   50 Term: SUB . Var
   51     | SUB . NUMBER
   52     | SUB . L_PAREN Expression R_PAREN

    IDENT    shift, and go to state 29
    NUMBER   shift, and go to state 75
    L_PAREN  shift, and go to state 76

    Var  go to state 77


State 49

   14 Statement: IF Bool-Expr . THEN Statement-Loop ENDIF
   15          | IF Bool-Expr . THEN Statement-Loop ELSE Statement-Loop ENDIF

    THEN  shift, and go to state 78


State 50

   22 Bool-Expr: Relation-And-Expr .
   23          | Relation-And-Expr . OR Bool-Expr

    OR  shift, and go to state 79

    $default  reduce using rule 22 (Bool-Expr)


State 51

   24 Relation-And-Expr: Relation-Expr .
   25                  | Relation-Expr . AND Relation-And-Expr

    AND  shift, and go to state 80

    $default  reduce using rule 24 (Relation-And-Expr)


State 52

   30 Relation-Expr: Expression . Comp Expression

    LT   shift, and go to state 81
    LTE  shift, and go to state 82
    GT   shift, and go to state 83
    GTE  shift, and go to state 84
    EQ   shift, and go to state 85
    NEQ  shift, and go to state 86

    Comp  go to state 87


State 53

   43 Expression: Multiplicative-Expr .
   44           | Multiplicative-Expr . ADD Expression
   45           | Multiplicative-Expr . SUB Expression

    ADD  shift, and go to state 88
    SUB  shift, and go to state 89

    SUB       [reduce using rule 43 (Expression)]
    $default  reduce using rule 43 (Expression)


State 54

   46 Multiplicative-Expr: Term .
   47                    | Term . MULT Multiplicative-Expr
   48                    | Term . DIV Multiplicative-Expr
   49                    | Term . MOD Multiplicative-Expr

    MULT  shift, and go to state 90
    DIV   shift, and go to state 91
    MOD   shift, and go to state 92

    $default  reduce using rule 46 (Multiplicative-Expr)


State 55

   53 Term: Var .

    $default  reduce using rule 53 (Term)


State 56

   16 Statement: WHILE Bool-Expr . BEGINLOOP Statement-Loop ENDLOOP

    BEGINLOOP  shift, and go to state 93


State 57

   17 Statement: DO BEGINLOOP . Statement-Loop ENDLOOP WHILE Bool-Expr

    IDENT     shift, and go to state 29
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36

    Statement-Loop  go to state 94
    Statement       go to state 38
    Var             go to state 39


State 58

   18 Statement: READ Var-Loop .

    $default  reduce using rule 18 (Statement)


State 59

   57 Var-Loop: Var .
   58         | Var . COMMA Var-Loop

    COMMA  shift, and go to state 95

    $default  reduce using rule 57 (Var-Loop)


State 60

   19 Statement: WRITE Var-Loop .

    $default  reduce using rule 19 (Statement)


State 61

   55 Term: L_PAREN . Expression R_PAREN

    IDENT    shift, and go to state 42
    NUMBER   shift, and go to state 43
    L_PAREN  shift, and go to state 61
    SUB      shift, and go to state 48

    Expression           go to state 96
    Multiplicative-Expr  go to state 53
    Term                 go to state 54
    Var                  go to state 55


State 62

   21 Statement: RETURN Expression .

    $default  reduce using rule 21 (Statement)


State 63

    4 Function: FUNCTION IDENT SEMICOLON BEGIN_PARAMS Declaration-Loop END_PARAMS BEGIN_LOCALS Declaration-Loop END_LOCALS BEGIN_BODY Statement-Loop END_BODY .

    $default  reduce using rule 4 (Function)


State 64

   11 Statement-Loop: Statement SEMICOLON .
   12               | Statement SEMICOLON . Statement-Loop

    IDENT     shift, and go to state 29
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36

    $default  reduce using rule 11 (Statement-Loop)

    Statement-Loop  go to state 97
    Statement       go to state 38
    Var             go to state 39


State 65

   13 Statement: Var ASSIGN . Expression

    IDENT    shift, and go to state 42
    NUMBER   shift, and go to state 43
    L_PAREN  shift, and go to state 61
    SUB      shift, and go to state 48

    Expression           go to state 98
    Multiplicative-Expr  go to state 53
    Term                 go to state 54
    Var                  go to state 55


State 66

   10 Declaration: Ident-Loop COLON ARRAY L_SQUARE_BRACKET NUMBER R_SQUARE_BRACKET OF INTEGER .

    $default  reduce using rule 10 (Declaration)


State 67

   60 Var: IDENT L_SQUARE_BRACKET Expression . R_SQUARE_BRACKET

    R_SQUARE_BRACKET  shift, and go to state 99


State 68

   56 Term: IDENT L_PAREN . Expression-Loop R_PAREN

    IDENT    shift, and go to state 42
    NUMBER   shift, and go to state 43
    L_PAREN  shift, and go to state 61
    SUB      shift, and go to state 48

    $default  reduce using rule 42 (Expression-Loop)

    Expression-Loop      go to state 100
    Expression           go to state 101
    Multiplicative-Expr  go to state 53
    Term                 go to state 54
    Var                  go to state 55


State 69

   33 Relation-Expr: L_PAREN Bool-Expr . R_PAREN

    R_PAREN  shift, and go to state 102


State 70

   30 Relation-Expr: Expression . Comp Expression
   55 Term: L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 103
    LT       shift, and go to state 81
    LTE      shift, and go to state 82
    GT       shift, and go to state 83
    GTE      shift, and go to state 84
    EQ       shift, and go to state 85
    NEQ      shift, and go to state 86

    Comp  go to state 87


State 71

   27 Relation-Expr: NOT TRUE .

    $default  reduce using rule 27 (Relation-Expr)


State 72

   28 Relation-Expr: NOT FALSE .

    $default  reduce using rule 28 (Relation-Expr)


State 73

   29 Relation-Expr: NOT L_PAREN . Bool-Expr R_PAREN
   55 Term: L_PAREN . Expression R_PAREN

    IDENT    shift, and go to state 42
    NUMBER   shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    L_PAREN  shift, and go to state 46
    NOT      shift, and go to state 47
    SUB      shift, and go to state 48

    Bool-Expr            go to state 104
    Relation-And-Expr    go to state 50
    Relation-Expr        go to state 51
    Expression           go to state 70
    Multiplicative-Expr  go to state 53
    Term                 go to state 54
    Var                  go to state 55


State 74

   26 Relation-Expr: NOT Expression . Comp Expression

    LT   shift, and go to state 81
    LTE  shift, and go to state 82
    GT   shift, and go to state 83
    GTE  shift, and go to state 84
    EQ   shift, and go to state 85
    NEQ  shift, and go to state 86

    Comp  go to state 105


State 75

   51 Term: SUB NUMBER .

    $default  reduce using rule 51 (Term)


State 76

   52 Term: SUB L_PAREN . Expression R_PAREN

    IDENT    shift, and go to state 42
    NUMBER   shift, and go to state 43
    L_PAREN  shift, and go to state 61
    SUB      shift, and go to state 48

    Expression           go to state 106
    Multiplicative-Expr  go to state 53
    Term                 go to state 54
    Var                  go to state 55


State 77

   50 Term: SUB Var .

    $default  reduce using rule 50 (Term)


State 78

   14 Statement: IF Bool-Expr THEN . Statement-Loop ENDIF
   15          | IF Bool-Expr THEN . Statement-Loop ELSE Statement-Loop ENDIF

    IDENT     shift, and go to state 29
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36

    Statement-Loop  go to state 107
    Statement       go to state 38
    Var             go to state 39


State 79

   23 Bool-Expr: Relation-And-Expr OR . Bool-Expr

    IDENT    shift, and go to state 42
    NUMBER   shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    L_PAREN  shift, and go to state 46
    NOT      shift, and go to state 47
    SUB      shift, and go to state 48

    Bool-Expr            go to state 108
    Relation-And-Expr    go to state 50
    Relation-Expr        go to state 51
    Expression           go to state 52
    Multiplicative-Expr  go to state 53
    Term                 go to state 54
    Var                  go to state 55


State 80

   25 Relation-And-Expr: Relation-Expr AND . Relation-And-Expr

    IDENT    shift, and go to state 42
    NUMBER   shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    L_PAREN  shift, and go to state 46
    NOT      shift, and go to state 47
    SUB      shift, and go to state 48

    Relation-And-Expr    go to state 109
    Relation-Expr        go to state 51
    Expression           go to state 52
    Multiplicative-Expr  go to state 53
    Term                 go to state 54
    Var                  go to state 55


State 81

   36 Comp: LT .

    $default  reduce using rule 36 (Comp)


State 82

   38 Comp: LTE .

    $default  reduce using rule 38 (Comp)


State 83

   37 Comp: GT .

    $default  reduce using rule 37 (Comp)


State 84

   39 Comp: GTE .

    $default  reduce using rule 39 (Comp)


State 85

   34 Comp: EQ .

    $default  reduce using rule 34 (Comp)


State 86

   35 Comp: NEQ .

    $default  reduce using rule 35 (Comp)


State 87

   30 Relation-Expr: Expression Comp . Expression

    IDENT    shift, and go to state 42
    NUMBER   shift, and go to state 43
    L_PAREN  shift, and go to state 61
    SUB      shift, and go to state 48

    Expression           go to state 110
    Multiplicative-Expr  go to state 53
    Term                 go to state 54
    Var                  go to state 55


State 88

   44 Expression: Multiplicative-Expr ADD . Expression

    IDENT    shift, and go to state 42
    NUMBER   shift, and go to state 43
    L_PAREN  shift, and go to state 61
    SUB      shift, and go to state 48

    Expression           go to state 111
    Multiplicative-Expr  go to state 53
    Term                 go to state 54
    Var                  go to state 55


State 89

   45 Expression: Multiplicative-Expr SUB . Expression

    IDENT    shift, and go to state 42
    NUMBER   shift, and go to state 43
    L_PAREN  shift, and go to state 61
    SUB      shift, and go to state 48

    Expression           go to state 112
    Multiplicative-Expr  go to state 53
    Term                 go to state 54
    Var                  go to state 55


State 90

   47 Multiplicative-Expr: Term MULT . Multiplicative-Expr

    IDENT    shift, and go to state 42
    NUMBER   shift, and go to state 43
    L_PAREN  shift, and go to state 61
    SUB      shift, and go to state 48

    Multiplicative-Expr  go to state 113
    Term                 go to state 54
    Var                  go to state 55


State 91

   48 Multiplicative-Expr: Term DIV . Multiplicative-Expr

    IDENT    shift, and go to state 42
    NUMBER   shift, and go to state 43
    L_PAREN  shift, and go to state 61
    SUB      shift, and go to state 48

    Multiplicative-Expr  go to state 114
    Term                 go to state 54
    Var                  go to state 55


State 92

   49 Multiplicative-Expr: Term MOD . Multiplicative-Expr

    IDENT    shift, and go to state 42
    NUMBER   shift, and go to state 43
    L_PAREN  shift, and go to state 61
    SUB      shift, and go to state 48

    Multiplicative-Expr  go to state 115
    Term                 go to state 54
    Var                  go to state 55


State 93

   16 Statement: WHILE Bool-Expr BEGINLOOP . Statement-Loop ENDLOOP

    IDENT     shift, and go to state 29
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36

    Statement-Loop  go to state 116
    Statement       go to state 38
    Var             go to state 39


State 94

   17 Statement: DO BEGINLOOP Statement-Loop . ENDLOOP WHILE Bool-Expr

    ENDLOOP  shift, and go to state 117


State 95

   58 Var-Loop: Var COMMA . Var-Loop

    IDENT  shift, and go to state 29

    Var-Loop  go to state 118
    Var       go to state 59


State 96

   55 Term: L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 103


State 97

   12 Statement-Loop: Statement SEMICOLON Statement-Loop .

    $default  reduce using rule 12 (Statement-Loop)


State 98

   13 Statement: Var ASSIGN Expression .

    $default  reduce using rule 13 (Statement)


State 99

   60 Var: IDENT L_SQUARE_BRACKET Expression R_SQUARE_BRACKET .

    $default  reduce using rule 60 (Var)


State 100

   56 Term: IDENT L_PAREN Expression-Loop . R_PAREN

    R_PAREN  shift, and go to state 119


State 101

   40 Expression-Loop: Expression .
   41                | Expression . COMMA Expression Expression-Loop

    COMMA  shift, and go to state 120

    $default  reduce using rule 40 (Expression-Loop)


State 102

   33 Relation-Expr: L_PAREN Bool-Expr R_PAREN .

    $default  reduce using rule 33 (Relation-Expr)


State 103

   55 Term: L_PAREN Expression R_PAREN .

    $default  reduce using rule 55 (Term)


State 104

   29 Relation-Expr: NOT L_PAREN Bool-Expr . R_PAREN

    R_PAREN  shift, and go to state 121


State 105

   26 Relation-Expr: NOT Expression Comp . Expression

    IDENT    shift, and go to state 42
    NUMBER   shift, and go to state 43
    L_PAREN  shift, and go to state 61
    SUB      shift, and go to state 48

    Expression           go to state 122
    Multiplicative-Expr  go to state 53
    Term                 go to state 54
    Var                  go to state 55


State 106

   52 Term: SUB L_PAREN Expression . R_PAREN

    R_PAREN  shift, and go to state 123


State 107

   14 Statement: IF Bool-Expr THEN Statement-Loop . ENDIF
   15          | IF Bool-Expr THEN Statement-Loop . ELSE Statement-Loop ENDIF

    ENDIF  shift, and go to state 124
    ELSE   shift, and go to state 125


State 108

   23 Bool-Expr: Relation-And-Expr OR Bool-Expr .

    $default  reduce using rule 23 (Bool-Expr)


State 109

   25 Relation-And-Expr: Relation-Expr AND Relation-And-Expr .

    $default  reduce using rule 25 (Relation-And-Expr)


State 110

   30 Relation-Expr: Expression Comp Expression .

    $default  reduce using rule 30 (Relation-Expr)


State 111

   44 Expression: Multiplicative-Expr ADD Expression .

    $default  reduce using rule 44 (Expression)


State 112

   45 Expression: Multiplicative-Expr SUB Expression .

    $default  reduce using rule 45 (Expression)


State 113

   47 Multiplicative-Expr: Term MULT Multiplicative-Expr .

    $default  reduce using rule 47 (Multiplicative-Expr)


State 114

   48 Multiplicative-Expr: Term DIV Multiplicative-Expr .

    $default  reduce using rule 48 (Multiplicative-Expr)


State 115

   49 Multiplicative-Expr: Term MOD Multiplicative-Expr .

    $default  reduce using rule 49 (Multiplicative-Expr)


State 116

   16 Statement: WHILE Bool-Expr BEGINLOOP Statement-Loop . ENDLOOP

    ENDLOOP  shift, and go to state 126


State 117

   17 Statement: DO BEGINLOOP Statement-Loop ENDLOOP . WHILE Bool-Expr

    WHILE  shift, and go to state 127


State 118

   58 Var-Loop: Var COMMA Var-Loop .

    $default  reduce using rule 58 (Var-Loop)


State 119

   56 Term: IDENT L_PAREN Expression-Loop R_PAREN .

    $default  reduce using rule 56 (Term)


State 120

   41 Expression-Loop: Expression COMMA . Expression Expression-Loop

    IDENT    shift, and go to state 42
    NUMBER   shift, and go to state 43
    L_PAREN  shift, and go to state 61
    SUB      shift, and go to state 48

    Expression           go to state 128
    Multiplicative-Expr  go to state 53
    Term                 go to state 54
    Var                  go to state 55


State 121

   29 Relation-Expr: NOT L_PAREN Bool-Expr R_PAREN .

    $default  reduce using rule 29 (Relation-Expr)


State 122

   26 Relation-Expr: NOT Expression Comp Expression .

    $default  reduce using rule 26 (Relation-Expr)


State 123

   52 Term: SUB L_PAREN Expression R_PAREN .

    $default  reduce using rule 52 (Term)


State 124

   14 Statement: IF Bool-Expr THEN Statement-Loop ENDIF .

    $default  reduce using rule 14 (Statement)


State 125

   15 Statement: IF Bool-Expr THEN Statement-Loop ELSE . Statement-Loop ENDIF

    IDENT     shift, and go to state 29
    IF        shift, and go to state 30
    WHILE     shift, and go to state 31
    DO        shift, and go to state 32
    CONTINUE  shift, and go to state 33
    READ      shift, and go to state 34
    WRITE     shift, and go to state 35
    RETURN    shift, and go to state 36

    Statement-Loop  go to state 129
    Statement       go to state 38
    Var             go to state 39


State 126

   16 Statement: WHILE Bool-Expr BEGINLOOP Statement-Loop ENDLOOP .

    $default  reduce using rule 16 (Statement)


State 127

   17 Statement: DO BEGINLOOP Statement-Loop ENDLOOP WHILE . Bool-Expr

    IDENT    shift, and go to state 42
    NUMBER   shift, and go to state 43
    TRUE     shift, and go to state 44
    FALSE    shift, and go to state 45
    L_PAREN  shift, and go to state 46
    NOT      shift, and go to state 47
    SUB      shift, and go to state 48

    Bool-Expr            go to state 130
    Relation-And-Expr    go to state 50
    Relation-Expr        go to state 51
    Expression           go to state 52
    Multiplicative-Expr  go to state 53
    Term                 go to state 54
    Var                  go to state 55


State 128

   41 Expression-Loop: Expression COMMA Expression . Expression-Loop

    IDENT    shift, and go to state 42
    NUMBER   shift, and go to state 43
    L_PAREN  shift, and go to state 61
    SUB      shift, and go to state 48

    $default  reduce using rule 42 (Expression-Loop)

    Expression-Loop      go to state 131
    Expression           go to state 101
    Multiplicative-Expr  go to state 53
    Term                 go to state 54
    Var                  go to state 55


State 129

   15 Statement: IF Bool-Expr THEN Statement-Loop ELSE Statement-Loop . ENDIF

    ENDIF  shift, and go to state 132


State 130

   17 Statement: DO BEGINLOOP Statement-Loop ENDLOOP WHILE Bool-Expr .

    $default  reduce using rule 17 (Statement)


State 131

   41 Expression-Loop: Expression COMMA Expression Expression-Loop .

    $default  reduce using rule 41 (Expression-Loop)


State 132

   15 Statement: IF Bool-Expr THEN Statement-Loop ELSE Statement-Loop ENDIF .

    $default  reduce using rule 15 (Statement)
